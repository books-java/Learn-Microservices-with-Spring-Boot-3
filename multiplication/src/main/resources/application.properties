spring.application.name=multiplication

spring.config.import=consul:
spring.cloud.consul.config.enabled=true
spring.cloud.consul.config.prefixes=config
spring.cloud.consul.config.format=yaml
spring.cloud.consul.config.default-context=defaults
spring.cloud.consul.config.data-key=application.yml

# H2 Database Configuration
# JDBC URL for connecting to the H2 in-memory database
spring.datasource.url=jdbc:h2:./db/multiplication-db;AUTO_SERVER=TRUE
# Driver class for H2 Database
spring.datasource.driverClassName=org.h2.Driver
# Username for connecting to the H2 Database
spring.datasource.username=sa
# Password for connecting to the H2 Database
spring.datasource.password=
# Hibernate dialect for H2 Database
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Creates or updates the schema if needed
spring.jpa.hibernate.ddl-auto=update
# For educational purposes we will show the SQL in console
spring.jpa.show-sql=false
# Gives us access to the H2 database web console
spring.h2.console.enabled=true

# App
# The name of the exchange: It’s useful to have it in the configuration
# in case you need to modify it later depending on the environment
# you’re running your application, or share it across applications, as
# you’ll see in the next chapter.
amqp.exchange.attempts=attempts.topic
# Shows declaration of exchanges, queues, bindings, etc.
#logging.level.org.springframework.amqp.rabbit.core.RabbitAdmin=DEBUG

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=loan-service
management.tracing.sampling.probability=1.0
# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
#logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}]